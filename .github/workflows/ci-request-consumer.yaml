name: CI Request Consumer

on:
  push:
    paths:
      - 'functions/request-consumer/**'
  pull_request:
    paths:
      - 'functions/request-consumer/**'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: pip install -r functions/request-consumer/requirements.txt
      - name: Lint
        run: |
          pip install flake8
          flake8 functions/request-consumer/main.py

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: pip install -r functions/request-consumer/requirements.txt
      - name: Run tests
        run: pytest functions/request-consumer/

  build-staging:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: pip install -r functions/request-consumer/requirements.txt
      - name: Zip Lambda
        run: |
          cd functions/request-consumer
          zip -r ../../request-consumer.zip .
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: request-consumer-staging
          path: request-consumer.zip

  deploy-staging:
    needs: build-staging
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: request-consumer-staging
      - name: Install Pulumi dependencies
        run: pip install -r infrastructure/requirement.txt
      - name: Pulumi Deploy (Staging)
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          PULUMI_BACKEND_URL: s3://your-staging-bucket/staging-folder/
        run: |
          pulumi stack select staging
          pulumi up --yes --cwd infrastructure

  build-production:
    if: github.ref == 'refs/heads/main'
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: pip install -r functions/request-consumer/requirements.txt
      - name: Zip Lambda
        run: |
          cd functions/request-consumer
          zip -r ../../request-consumer.zip .
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: request-consumer-production
          path: request-consumer.zip

  deploy-production:
    if: github.ref == 'refs/heads/main'
    needs: build-production
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: request-consumer-production
      - name: Install Pulumi dependencies
        run: pip install -r infrastructure/requirement.txt
      - name: Pulumi Deploy (Production)
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          PULUMI_BACKEND_URL: s3://your-production-bucket/production-folder/
        run: |
          pulumi stack select production
          pulumi up --yes --cwd infrastructure
