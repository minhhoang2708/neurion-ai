name: CI Request Consumer

on:
  push:
    paths:
      - 'functions/request_consumer/**'
  pull_request:
  workflow_dispatch:
    paths:
      - 'functions/request_consumer/**'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Lint code
        uses: ./.github/actions/lint
        with:
          service-path: functions/request_consumer

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Unit Test
        uses: ./.github/actions/test
        with:
          service-path: functions/request_consumer

  build-staging:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build Request Consumer Lambda ZIP
        uses: ./.github/actions/build-lambda
        with:
          environment-name: staging
          service-name: request-consumer
          service-path: functions/request_consumer
          upload-artifact-name: request-consumer-zip-staging
          upload-artifact-path: request_consumer.zip
          pulumi-working-directory: infrastructure/request_consumer
          pulumi-stack: staging
          pulumi-config-passphrase: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
          pulumi-backend_url: s3://0202-pulumi-state/neurion-ai/request-consumer
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

  deploy-staging:
    needs: build-staging
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Deploy Request Consumer Lambda ZIP
        uses: ./.github/actions/deploy-lambda
        with:
          environment-name: staging
          service-name: request-consumer
          service-path: functions/request_consumer
          download-artifact-name: request-consumer-zip-staging
          pulumi-working-directory: infrastructure/request_consumer
          pulumi-stack: staging
          pulumi-config-passphrase: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
          pulumi-backend_url: s3://0202-pulumi-state/neurion-ai/request-consumer
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

  build-production:
    needs: [lint, test]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build Request Consumer Lambda ZIP
        uses: ./.github/actions/build-lambda
        with:
          environment-name: production
          service-name: request-consumer
          service-path: functions/request_consumer
          upload-artifact-name: request-consumer-zip-production
          upload-artifact-path: request_consumer.zip
          pulumi-working-directory: infrastructure/request_consumer
          pulumi-stack: production
          pulumi-config-passphrase: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
          pulumi-backend_url: s3://0202-pulumi-state/neurion-ai/request-consumer
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

  deploy-production:
    needs: build-production
    if: github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Deploy Request Consumer Lambda ZIP
        uses: ./.github/actions/deploy-lambda
        with:
          environment-name: production
          service-name: request-consumer
          service-path: functions/request_consumer
          download-artifact-name: request-consumer-zip-production
          pulumi-working-directory: infrastructure/request_consumer
          pulumi-stack: production
          pulumi-config-passphrase: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
          pulumi-backend_url: s3://0202-pulumi-state/neurion-ai/request-consumer
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}
